-----Command to clean data-----
db.dirtydataset.find({}, {play_type: true, yards_gained:true, interception:true, fumble_lost:true,rush_attempt:true,pass_attempt:true,pass_touchdown:true,rush_touchdown:true,passer_player_id:true,passer_player_name:true,receiver_player_id:true,receiver_player_name:true,rusher_player_id:true,rusher_player_name:true } ).forEach(function(x){db.cleandata.insert(x);})

-----Create Test Data-----
db.cleandata.find().limit(1000).forEach(function(x){db.testdata1000.insert(x);})

-----MapReduce-----
var mapFunction1 = function() {
	var value = {
		touchdowns: 0,
		yards: parseFloat(this.yards_gained),
		IsQB: false
	};
	if(this.play_type == "run"){
		value.touchdowns = parseFloat(this.rush_touchdown);
        emit(this.rusher_player_name, value);
	}
	if(this.play_type == "pass"){
		value.touchdowns = parseFloat(this.pass_touchdown);
        emit(this.receiver_player_name,value);
		value.IsQB = true;
		emit(this.passer_player_name,value);
	}
 };

var reduceFunction1 = function(name, vals) {
        reducedVal = { touchdowns: 0, yards: 0, IsQB: vals[0].IsQB};
        for (var idx = 0; idx < vals.length; idx++) {
            reducedVal.touchdowns += vals[idx].touchdowns;
            reducedVal.yards += vals[idx].yards;
        }
		return reducedVal;
};


var finalizeFunction1 = function(name, vals) {
	vals.points = 0;	
	if(vals.IsQB == false){	vals.points += Math.floor(vals.yards / 10.0);
		vals.points += vals.touchdowns * 6;
	}else{ vals.points += Math.floor(vals.yards / 25.0);
		vals.points += vals.touchdowns * 4;
	}
    return vals;
};


db.cleandata.mapReduce(
	mapFunction1,
	reduceFunction1,
	{
		out: "players_points",		
		finalize: finalizeFunction1
	})
		
db.testdata.mapReduce(
	mapFunction1,
	reduceFunction1,
	{
		out: "players_points",		
		finalize: finalizeFunction1
	})
	
db.testdata1000.mapReduce(
	mapFunction1,
	reduceFunction1,
	{
		out: "players_points",	
		finalize: finalizeFunction1})
-----Sorting-----


-----Troubleshooting-----
-----Mapper-----
var emit = function(key, value) {
	print("emit");
	print("key: " + key + "  value: " + tojson(value));
}

var myDoc = db.testdata.findOne( { _id: ObjectId("5c0c8fcd4881fd17b071cf99") } );
mapFunction1.apply(myDoc);

var myCursor = db.testdata.find( { passer_player_name: "T.Brady" } );

while (myCursor.hasNext()) {
    var doc = myCursor.next();
    print ("document _id= " + tojson(doc._id));
    mapFunction1.apply(doc);
    print();
}